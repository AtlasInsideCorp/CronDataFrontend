# This is a basic workflow to help you get started with Actions

name: Crondata build testing
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - '*'
      - '!v8'
      - '!main'
  workflow_dispatch:
    inputs:
      version:
        description: CronData Version
        default: v2.0.1
        required: false
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

        # Runs a single command using the runners shell
      - uses: actions/setup-node@v1 #this installs node and npm for us
        with:
          node-version: '14.16.1'


      - uses: actions/cache@v1 # this allows for re-using node_modules caching, making builds a bit faster.
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build
        run: |
          export NODE_OPTIONS=--max_old_space_size=8192
          npm install
          npm run-script build

      - name: Install Docker
        run: |
          sudo apt update
          sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          docker login -u github -p ${{secrets.REGISTRY_KEY}} utmstack.azurecr.io

      - name: Build Image
        run: "docker build -t utmstack.azurecr.io/crondata-frontend:testing ."

      - name: Push
        run: "docker push utmstack.azurecr.io/crondata-frontend:testing"


